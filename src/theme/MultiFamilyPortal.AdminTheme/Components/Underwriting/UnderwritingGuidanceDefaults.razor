<TelerikGrid Data=@_guidance
             Groupable="false"
             FilterMode="GridFilterMode.None"
             Sortable="false"
             ShowColumnMenu="false"
             @ref="grid">
  <GridToolBar>
    <AuthorizedPolicy Policy=@PortalPolicy.Underwriter>
      <TelerikButton ButtonType=@ButtonType.Button
                     Primary=@true
                     IconClass="fa-duotone fa-copy"
                     OnClick="@(() => _windowVisibility = !_windowVisibility)"
                     Title="Add Market">Add Market</TelerikButton>
    </AuthorizedPolicy>
  </GridToolBar>
  <GridColumns>
    <GridColumn Field="Market" Groupable="true">
      <Template>
        @{ var guidance = context as Data.Models.UnderwritingGuidance; }
        @if(string.IsNullOrEmpty(guidance.Market))
        {
          <span>Default</span>
        }
        else
        {
          <span>@guidance.Market</span>
        }
      </Template>
    </GridColumn>
    <GridColumn Field="Category" Groupable="false">
      <Template>
        @{ var guidance = context as Data.Models.UnderwritingGuidance; }
          <span>@guidance.Category.Humanize(LetterCasing.Title)</span>
      </Template>
    </GridColumn>
    <GridColumn Title="Amount">
      <Template>
        @{ var guidance = context as Data.Models.UnderwritingGuidance; }
        @if(guidance.Type == Data.Models.CostType.PerDoor)
        {
          <span>@guidance.Min.ToString("C") - @guidance.Max.ToString("C") Per Door</span>
        }
        else if(guidance.Type == Data.Models.CostType.PercentOfPurchase)
        {
          <span>@guidance.Max.ToString("P") of Purchase</span>
        }
        else
        {
          <span>@guidance.Max.ToString("C")</span>
        }
      </Template>
    </GridColumn>
  </GridColumns>
</TelerikGrid>

<TelerikWindow @bind-Visible="@_windowVisibility" 
               Top="25px" 
               Modal="true" 
               Width="1200px"
               Height="800px">
  <WindowTitle>
    <strong>Add Market</strong>
  </WindowTitle>
  <WindowActions>
      <WindowAction Name="Minimize"></WindowAction>
      <WindowAction Name="Maximize"></WindowAction>
      <WindowAction Name="Close"></WindowAction>
  </WindowActions>
    <WindowContent>
      <UnderwritingMarketAddition Guidance="@(_guidance.Where(x => string.IsNullOrEmpty(x.Market)))"
                                  UpdateGuidance=@RefreshGuidance />
  </WindowContent>
</TelerikWindow>
