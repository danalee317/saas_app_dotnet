@using Data.Models
@if (Guidance.Type == Data.Models.CostType.PerDoor)
{
  var min = Guidance.Min * Property.Units;
  var max = Guidance.Max * Property.Units;
  var totalMax = Property.OurExpense.Where(x => x.Category == Guidance.Category).Sum(y => y.AnnualizedTotal);
  if (min == max)
  {
    if (max > totalMax)
    {
      <span class="text-warning" id="icon" title="Below Expected">
        <i class="fas fa-shield-check"></i>
      </span>
    }
    else if (max < totalMax)
    {
      <span class="text-danger" id="icon" title="Above Expected">
        <i class="fas fa-exclamation-circle"></i>
      </span>
    }
    else
    {
      <span class="text-success" id="icon" title="Within Range">
       <i class="fad fa-badge-check"></i>
      </span>
    }
  }
  else
  {
    if (min > totalMax)
    {
      <span class="text-warning" id="icon" title="Below Minumum">
       <i class="fas fa-shield-check"></i>
      </span>
    }
    else if (max < totalMax)
    {
      <span class="text-danger" title="Above Maximum">
       <i class="fas fa-exclamation-circle"></i>
      </span>
    }
    else
    {
      <span class="text-success" id="icon" title="Within Bounds">
       <i class="fad fa-badge-check"></i>
      </span>
    }
  }
}
else if (Guidance.Type == Data.Models.CostType.PercentOfPurchase)
{
  var total = Guidance.Max * Property.PurchasePrice;
  var totalTaxes = Property.OurExpense.Where(x => x.Category == UnderwritingCategory.Taxes).Sum(y =>
  y.AnnualizedTotal);

  if (totalTaxes > total)
  {
    <span class="text-danger" id="icon" title="Higher Percentage">
     <i class="fas fa-exclamation-circle"></i>
    </span>
  }
  else if (totalTaxes == total)
  {
    <span class="text-success" id="icon" title="All Good.">
     <i class="fad fa-badge-check"></i>
    </span>
  }
  else
  {
    <span class="text-warning" id="icon" title="Lower Percentage">
     <i class="fas fa-shield-check"></i>
    </span>
  }
}
else
{
  <span class="text-secondary" id="icon" title="Unknown Expense">
    <i class="fas fa-question-circle"></i>
  </span>
}

<TelerikTooltip TargetSelector="#icon"/>